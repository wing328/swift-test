//
// ResponseModelB.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ResponseModelB: Codable, JSONEncodable, Hashable {

    public var expires: Int
    public var value1: String
    public var value2: String?
    public var valueType: String?

    public init(expires: Int, value1: String, value2: String? = nil, valueType: String? = nil) {
        self.expires = expires
        self.value1 = value1
        self.value2 = value2
        self.valueType = valueType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case expires
        case value1 = "value_1"
        case value2 = "value_2"
        case valueType = "value_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(expires, forKey: .expires)
        try container.encode(value1, forKey: .value1)
        try container.encodeIfPresent(value2, forKey: .value2)
        try container.encodeIfPresent(valueType, forKey: .valueType)
    }
}

